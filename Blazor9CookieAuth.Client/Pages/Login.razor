@page "/login"
@rendermode InteractiveWebAssembly
@inject NavigationManager Navigation
@inject HttpClient Http 

<input @bind="secret" class="form-control mb-2" placeholder="Enter secret" />
<button class="btn btn-primary" @onclick="LoginUser" type="button">Login</button>
<p>@log</p>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <p>Authorized</p>
        </Authorized>
        <NotAuthorized>
            <p>NotAuthorized</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private string secret = string.Empty;
    private string? log = "";

    private async Task LoginUser()
    {
        var response = await Http.PostAsJsonAsync("/api/auth/login", secret);

        if (response.IsSuccessStatusCode)
        {
            // Auth cookie was issued, but the circuit still unauthenticated. Force a full reload so Blazor sees the auth state
            //Navigation.NavigateTo("/", forceLoad: true);
            log += "Logged in.";
            Navigation.NavigateTo("/", forceLoad: true);
        }
        else
        {
            log += "Invalid secret.";
            StateHasChanged();
        }
    }
}