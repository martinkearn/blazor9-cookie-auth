@page "/logout"
@rendermode InteractiveWebAssembly
@inject NavigationManager Navigation
@inject HttpClient Http 

<PageTitle>Logout</PageTitle>

<h1>Logout</h1>

<p>
    <span class="badge text-bg-primary">
        @(RendererInfo.IsInteractive ? "Interactive" : "Not Interactive") (@RendererInfo.Name)
    </span>
</p>

<p>
    <span class="badge text-bg-primary">
        <CascadingAuthenticationState>
            <AuthorizeView>
                <Authorized>Authorized</Authorized>
                <NotAuthorized>Not Authorized</NotAuthorized>
            </AuthorizeView>
        </CascadingAuthenticationState>
    </span>
</p>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <button class="btn btn-primary" @onclick="LogoutUser" type="button">Logout</button>
        </Authorized>
        <NotAuthorized>
            <p>You are not logged in.</p>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private async Task LogoutUser()
    {
        var response = await Http.PostAsync("/api/auth/logout", null);

        if (response.IsSuccessStatusCode)
        {
            // Force a full reload so Blazor sees the auth state
            Navigation.NavigateTo("/", forceLoad: true);
        }
    }
}